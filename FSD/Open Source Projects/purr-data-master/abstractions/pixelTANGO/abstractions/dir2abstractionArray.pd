#N canvas 429 66 786 731 10;
#X obj 354 415 + 10;
#X obj 357 370 t f f;
#X obj 384 348 + 1;
#X obj 328 325 t a b;
#X obj 352 348 f 0;
#X msg 374 325 0;
#X text 445 178 reset;
#X obj 401 444 f \$0;
#X obj 354 394 * 120;
#X obj 447 197 loadbang;
#X obj 328 274 stripExtension;
#X obj 18 167 inlet;
#X obj 28 190 s \$0-in;
#X obj 28 403 r \$0-out;
#X obj 18 426 outlet;
#X obj 312 100 inlet;
#X obj 459 271 makesymbol pd-%s-array;
#X obj 459 251 f \$0;
#N canvas 198 308 862 550 1100-array 0;
#X obj 10 10 pixeltango/fx/edge 1 1100 1090;
#X obj 130 10 pixeltango/fx/emboss 2 1100 1090;
#X obj 250 10 pixeltango/fx/gain 3 1100 1090;
#X obj 370 10 pixeltango/fx/motionblur 4 1100 1090;
#X obj 490 10 pixeltango/fx/negative 5 1100 1090;
#X obj 610 10 pixeltango/fx/normalize 6 1100 1090;
#X obj 730 10 pixeltango/fx/posterize 7 1100 1090;
#X obj 850 10 pixeltango/fx/randomdot 8 1100 1090;
#X obj 970 10 pixeltango/fx/roll 9 1100 1090;
#X obj 1090 10 pixeltango/fx/rtx-DANGER_USE_AT_YOUR_OWN_RISK 10 1100
1090;
#X obj 1210 10 pixeltango/fx/scanline 11 1100 1090;
#X restore 19 455 pd \$0-array;
#X obj 311 123 t a b;
#X obj 459 144 s \$0-selector;
#X obj 441 115 inlet;
#X obj 517 398 outlet;
#X text 487 117 which Abst to route through?;
#X text 520 416 List of options;
#X obj 18 373 spigot;
#X msg 193 310 1;
#X obj 425 144 == 0;
#X obj 374 444 + 1;
#X obj 106 167 inlet;
#X obj 106 426 outlet;
#X obj 106 373 spigot;
#X obj 116 190 s \$0-in2;
#X obj 116 403 r \$0-out2;
#X obj 241 631 makesymbol pd-%s-array;
#X msg 241 651 \; \$1 clear;
#X obj 241 611 f \$0;
#X obj 328 477 pack s f f f s f;
#X obj 435 444 f \$1;
#X obj 448 219 t b b b;
#X msg 328 503 \; \$5 obj \$2 10 \$1 \$3 \$4 \$6;
#X text 14 8 This abstraction takes a glob pattern in a directory and
creates an array of the abstractions in that folder in an internal
subpatch called [pd \$0-array]. The abstractions are meant to be routing
objects so they all have a global receive and send \, but only one
abstraction in the array at a time will receive input. The abstractions
must contain at least a arrayRouterIn abstraction to broker the communication.
;
#X obj 305 550 stripPath;
#X obj 305 570 makesymbol pd-%s;
#X msg 305 590 \; \$1 loadbang;
#X text 399 597 <- Special Thanks to Roman Haefeli;
#X obj 304 210 folder_list;
#X obj 241 186 route clear pattern;
#X obj 305 232 t s s;
#X msg 508 372 append \$1;
#X msg 515 344 options \, append Passthrough;
#X msg 223 578 bang;
#X obj 329 300 makesymbol pixeltango/fx/%s;
#X connect 0 0 37 1;
#X connect 1 0 8 0;
#X connect 1 1 28 0;
#X connect 2 0 4 1;
#X connect 3 0 37 0;
#X connect 3 1 4 0;
#X connect 4 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 4 1;
#X connect 7 0 37 3;
#X connect 8 0 0 0;
#X connect 9 0 5 0;
#X connect 9 0 26 0;
#X connect 9 0 39 0;
#X connect 10 0 52 0;
#X connect 11 0 12 0;
#X connect 11 0 25 0;
#X connect 13 0 14 0;
#X connect 15 0 19 0;
#X connect 16 0 37 4;
#X connect 17 0 16 0;
#X connect 19 0 47 0;
#X connect 19 1 17 0;
#X connect 19 1 5 0;
#X connect 19 1 26 0;
#X connect 19 1 50 0;
#X connect 21 0 20 0;
#X connect 21 0 27 0;
#X connect 25 0 14 0;
#X connect 26 0 25 1;
#X connect 26 0 31 1;
#X connect 27 0 25 1;
#X connect 27 0 31 1;
#X connect 28 0 37 2;
#X connect 29 0 31 0;
#X connect 29 0 32 0;
#X connect 31 0 30 0;
#X connect 33 0 30 0;
#X connect 34 0 35 0;
#X connect 36 0 34 0;
#X connect 37 0 40 0;
#X connect 38 0 37 5;
#X connect 39 0 7 0;
#X connect 39 1 17 0;
#X connect 39 2 38 0;
#X connect 42 0 49 0;
#X connect 42 0 43 0;
#X connect 43 0 44 0;
#X connect 46 0 48 0;
#X connect 47 0 36 0;
#X connect 47 1 46 0;
#X connect 48 0 42 0;
#X connect 48 1 10 0;
#X connect 49 0 22 0;
#X connect 50 0 22 0;
#X connect 51 0 36 0;
#X connect 52 0 3 0;
