#N canvas 433 42 134 136 10;
#N canvas 433 329 796 469 interna 0;
#X obj 425 20 cnv 15 300 300 empty empty empty 5 8 1 10 -260390 -1
0;
#X obj 8 20 cnv 15 400 350 empty empty empty 5 8 1 10 -3121 -1 0;
#X msg 49 75 snap;
#X obj 27 51 render_trigger;
#X text 331 47 Before;
#X obj 335 28 gemhead 1;
#X obj 27 326 outlet;
#X obj 27 28 inlet;
#X msg 298 162 \$1 \$2;
#X obj 198 138 pack f f;
#X obj 198 68 r \$0-x-off;
#X obj 219 112 t b f;
#X obj 298 138 pack f f;
#X obj 319 112 t b f;
#X obj 298 68 r \$0-x-size;
#X obj 319 89 r \$0-y-size;
#X obj 672 297 outlet;
#X obj 586 28 inlet;
#X obj 27 275 translateXYZ 0 0 -1;
#X obj 453 268 prepend videoPlaneCorrection;
#X msg 453 246 1.33333;
#X obj 219 89 r \$0-y-off;
#X msg 198 162 \$1 \$2;
#X text 511 246 A*;
#X text 12 379 A* The feedback surface goes in front of the stack \,
so it occludes anything that would normally feedback on it. We can't
make the surface ORTHO or it stays in front of everything. Only problem
with setting it back in the Z dimen is that it'll throw off the Video_Plane
size!!! This is how we correct for the video plane size.;
#X obj 453 181 delay 250;
#X obj 453 155 mementoSetup pt.feedback \$0;
#X obj 586 58 route headSet;
#X obj 27 100 t a;
#X obj 27 180 spigot;
#X obj 27 228 pix_snap2tex \$1 \$2 \$3 \$4;
#X obj 84 180 spigot;
#X obj 63 112 r \$0-type;
#N canvas 0 22 258 148 select 0;
#X obj 47 97 outlet;
#X obj 48 75 == 0;
#X obj 56 31 loadbang;
#X text 118 32 Default;
#X msg 56 51 0;
#X obj 103 97 outlet;
#X obj 104 75 == 1;
#X obj 32 8 inlet;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 4 0 1 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X connect 7 0 6 0;
#X restore 63 132 pd select;
#X obj 84 251 pix_snap \$1 \$2 \$3 \$4;
#N canvas 728 459 454 304 defaults 0;
#X obj 18 46 f \$0;
#X msg 18 67 \; \$1-x-off-set 64 \; \$1-y-off-set -16 \; \$1-x-size-set
512 \; \$1-y-size-set 512;
#X obj 18 25 inlet;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X restore 470 213 pd defaults;
#N canvas 21 57 832 445 windowResolution 0;
#X obj 62 23 r pt.windowResolution;
#X obj 157 115 strcmp 640 480;
#X obj 157 136 == 0;
#X obj 297 112 strcmp 512 512;
#X obj 437 112 strcmp 1024 512;
#X obj 297 134 == 0;
#X obj 437 134 == 0;
#X obj 25 288 prepend \$0;
#X msg 25 308 \; \$1-x-off-set 0 \; \$1-y-off-set 0 \; \$1-x-size-set
\$2 \; \$1-y-size-set \$3;
#X obj 157 267 select 1;
#X obj 297 264 select 1;
#X obj 437 264 select 1;
#X obj 157 288 f \$0;
#X msg 157 308 \; \$1-x-off-set 64 \; \$1-y-off-set -16 \; \$1-x-size-set
512 \; \$1-y-size-set 512;
#X obj 297 288 f \$0;
#X obj 437 288 f \$0;
#X msg 297 308 \; \$1-x-off-set 0 \; \$1-y-off-set 0 \; \$1-x-size-set
512 \; \$1-y-size-set 512;
#X msg 437 308 \; \$1-x-off-set 0 \; \$1-y-off-set 0 \; \$1-x-size-set
1024 \; \$1-y-size-set 512;
#X obj 62 44 prepend list;
#X obj 25 267 lister;
#X obj 72 67 t l l l;
#X obj 227 182 ||;
#X obj 211 207 ||;
#X obj 211 229 select 0;
#X text 226 22 Chooses good guess of pt.feedback settings for each
window resolution.;
#X text 319 379 ^ Redundant!;
#X text 437 380 ^ Redundant!;
#X connect 0 0 18 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 2 0 22 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 10 0;
#X connect 5 0 21 0;
#X connect 6 0 11 0;
#X connect 6 0 21 1;
#X connect 7 0 8 0;
#X connect 9 0 12 0;
#X connect 10 0 14 0;
#X connect 11 0 15 0;
#X connect 12 0 13 0;
#X connect 14 0 16 0;
#X connect 15 0 17 0;
#X connect 18 0 20 0;
#X connect 18 0 19 1;
#X connect 19 0 7 0;
#X connect 20 0 1 0;
#X connect 20 1 3 0;
#X connect 20 2 4 0;
#X connect 21 0 22 1;
#X connect 22 0 23 0;
#X connect 23 0 19 0;
#X restore 246 335 pd windowResolution;
#X connect 2 0 28 0;
#X connect 3 0 28 0;
#X connect 3 2 2 0;
#X connect 5 0 28 0;
#X connect 7 0 3 0;
#X connect 8 0 30 2;
#X connect 8 0 34 2;
#X connect 9 0 22 0;
#X connect 10 0 9 0;
#X connect 11 0 9 0;
#X connect 11 1 9 1;
#X connect 12 0 8 0;
#X connect 13 0 12 0;
#X connect 13 1 12 1;
#X connect 14 0 12 0;
#X connect 15 0 13 0;
#X connect 17 0 27 0;
#X connect 18 0 6 0;
#X connect 19 0 16 0;
#X connect 20 0 19 0;
#X connect 21 0 11 0;
#X connect 22 0 30 1;
#X connect 22 0 34 1;
#X connect 25 0 20 0;
#X connect 25 0 35 0;
#X connect 26 0 25 0;
#X connect 26 1 16 0;
#X connect 27 0 5 0;
#X connect 27 1 26 0;
#X connect 28 0 29 0;
#X connect 28 0 31 0;
#X connect 29 0 30 0;
#X connect 30 0 18 0;
#X connect 31 0 34 0;
#X connect 32 0 33 0;
#X connect 33 0 29 1;
#X connect 33 1 31 1;
#X connect 34 0 18 0;
#X restore 9 191 pd interna;
#X obj 9 169 inlet;
#X obj 74 169 inlet;
#X obj 9 213 outlet;
#X obj 74 213 outlet;
#X obj 1 1 cnv 5 128 130 empty empty Texture_Feedback 5 6 1 9 -249661
-66577 0;
#X obj 23 50 nbx 4 14 -1e+37 1e+37 0 0 \$0-x-off \$0-x-off-set X_Offset
45 8 1 9 -262144 -1 -1 0 256;
#X obj 23 90 nbx 4 14 -1e+37 1e+37 0 0 \$0-x-size \$0-x-size-set X_Size
45 8 1 9 -262144 -1 -1 512 256;
#X obj 23 110 nbx 4 14 -1e+37 1e+37 0 0 \$0-y-size \$0-y-size-set Y_Size
45 8 1 9 -262144 -1 -1 512 256;
#X obj 23 70 nbx 4 14 -1e+37 1e+37 0 0 \$0-y-off \$0-y-off-set Y_Offset
45 8 1 9 -262144 -1 -1 0 256;
#X obj 157 76 commun /x_off \$0;
#X obj 157 95 commun /y_off \$0;
#X obj 157 114 commun /x_size \$0;
#X obj 157 134 commun /y_size \$0;
#X obj 2 17 popup 124 25 grey95 Type snap snap2tex;
#X obj 166 45 commun /type \$0;
#X obj 164 16 route bang;
#X text 8 244 Need to add functionality for popup and;
#X obj 277 45 s \$0-type;
#X connect 0 0 3 0;
#X connect 0 1 4 0;
#X connect 1 0 0 0;
#X connect 2 0 0 1;
#X connect 6 0 10 0;
#X connect 7 0 12 0;
#X connect 8 0 13 0;
#X connect 9 0 11 0;
#X connect 10 0 6 0;
#X connect 11 0 9 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X connect 14 0 16 0;
#X connect 15 0 14 0;
#X connect 16 1 15 0;
#X connect 16 1 18 0;
#X coords 0 0 1 1 130 132 1;
