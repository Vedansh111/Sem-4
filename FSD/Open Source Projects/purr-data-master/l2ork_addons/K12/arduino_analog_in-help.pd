#N canvas 210 47 508 474 10;
#X obj 375 -29 preset_hub k12 %hidden% %node% 2 5 5 %node% 2 6 7 %node%
2 6 7 %node% 2 7 5 %node% 2 7 18 %node% 2 8 4 %node% 2 8 4;
#X obj 138 151 cnv 15 475 167 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 123 -7 cnv 3 501 3 empty empty empty 5 14 0 20 -260097 -191407
0;
#X obj 123 -35 cnv 15 501 28 empty empty Arduino/AnalogIn 5 14 0 20
-139274 -262144 0;
#X obj 594 -4 ggee/image @pd_extra/K12/icons/l2ork.png 0;
#N canvas 492 154 385 225 META 0;
#X text 8 38 INLET_0 Connect the Arduino Connect object to this inlet
;
#X text 7 58 OUTLET_0 Connect this to any object where you wish to
pass the captured sensor data (e.g. a math object or an instrument)
;
#X text 6 5 DESCRIPTION Use this object to get the analog data from
the specified Arduino Uno analog pin;
#X restore 571 409 pd META;
#X obj 144 347 K12/math_number;
#X obj 144 32 K12/arduino_connect;
#X obj 144 158 K12/arduino_analog_in;
#X text 242 159 The Arcduino Analog In object takes in the analog pin
data (A0 \, A1 \, A2 \, A3 \, A4 \, and A5) coming from the Arduino
Uno. You can specify pin by clicking on the pin entry box \, typing
the value (e.g. A0) \, and pressing enter/return. Connect the Arduino
Connect object to the inlet. Connect the outlet to wherever you wish
to send captured pin data (e.g. a math object or an instrument). The
outputting data range is between 0 and 1.Object's color will change
from red to Arduino bluish-green indicating valid pin selection.;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
