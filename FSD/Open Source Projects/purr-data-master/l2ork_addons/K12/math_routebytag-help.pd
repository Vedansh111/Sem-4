#N canvas 341 55 502 572 10;
#X obj 310 29 cnv 15 243 107 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 75 464 cnv 15 479 240 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 186 -29 preset_hub k12 %hidden% %node% 2 5 9 %node% 2 7 8 %preset%
1 2 %preset% 0 1 %preset% 2 3 %preset% 3 4 %node% 2 6 4 %node% 2 8
8 %node% 2 9 8 %node% 2 10 8 %node% 2 10 4 %preset% 0 0 %node% 2 14
6 %node% 2 14 10 %node% 2 7 7 %node% 2 9 7 %node% 2 9 7 %node% 2 8
3 %preset% 0 3000 %preset% 1 3000 %node% 2 12 5 %preset% 0 0 %node%
2 12 9 %preset% 0 127 %node% 2 8 7 %preset% 0 0.15748 %node% 2 7 3
%preset% 0 3000 %preset% 1 3000 %node% 2 11 31 %node% 2 12 5 %node%
2 12 9 %node% 2 10 6 %preset% 0 127 %node% 2 10 12 %preset% 0 0 %node%
2 10 13 %preset% 0 1 %node% 2 11 3 %preset% 0 thistag %preset% 1 kerplop
%node% 2 13 11 %preset% 0 120 %node% 2 14 8 %node% 2 11 3 %preset%
0 3000 %node% 2 10 3 %preset% 0 3000 %node% 2 9 7 %preset% 0 0 %preset%
1 0 %node% 2 10 7 %preset% 0 0 %preset% 1 0 %node% 2 13 3 %preset%
0 kerplop %node% 2 12 3 %preset% 0 thistag %preset% 1 kerplop %node%
2 22 3 %node% 2 22 11 %node% 2 23 5 %node% 2 23 9 %node% 2 24 3 %node%
2 24 3 %node% 2 26 3 %node% 2 24 3 %node% 2 25 3 %node% 2 19 8 %node%
2 13 8 %node% 2 9 18 %preset% 0 localhost %preset% 1 localhost %node%
2 17 7 %node% 2 18 3 %node% 2 19 7 %node% 2 20 3 %node% 2 14 7 %preset%
0 0 %node% 2 15 3 %preset% 0 thattag %node% 2 16 7 %preset% 0 0 %node%
2 17 3 %preset% 0 thattag %node% 2 7 17;
#X obj 65 -4 cnv 3 501 3 empty empty empty 5 14 0 20 -260097 -191407
0;
#X obj 65 -33 cnv 15 501 28 empty empty Math/RouteByTag 5 14 0 20 -139274
-262144 0;
#X obj 535 0 ggee/image @pd_extra/K12/icons/l2ork.png;
#N canvas 529 184 450 370 META 0;
#X text 13 6 DESCRIPTION This compares all incoming data information
received over the network with a descriptive tag name and outputs all
data that matches this tag name;
#X text 12 59 INLET_0 Any incoming data to be matched;
#X text 13 97 OUTLET_0 All data that matches the specified tag;
#X restore 512 780 pd META;
#X obj 85 235 K12/math_netsend 0;
#X obj 85 354 K12/math_netreceive 0;
#X obj 85 30 K12/math_number 0;
#X obj 85 724 K12/math_number 0;
#X obj 85 117 K12/math_tag 0;
#X obj 85 473 K12/math_routebytag 0;
#X obj 455 38 K12/preset 0;
#X obj 190 30 K12/math_number 0;
#X obj 190 118 K12/math_tag 0;
#X obj 199 724 K12/math_number 0;
#X obj 199 473 K12/math_routebytag 0;
#X text 294 470 The Math RouteByTag object looks at allincoming data
and passes on any data thatmatches the tag name that you specify.Here
\, we are using the tags 'thistag' and'thattag'. Change the number
box above the'thistag' tag object and see how it issent to the correct
number box below.Similarly \, you can do the same for thenumber box
above the 'thattag' object.Math RouteByTag's partner object is theMath
Tag object \, used to tag data sentover the network with the tag name
thatyou choose.Look at the help files for the Tag \, NetSend \,
and NetReceive objects for moreinformation on how those objects work.
;
#X text 316 94 Recall leftmost presetto start the example.;
#X connect 8 0 12 0;
#X connect 8 0 17 0;
#X connect 9 0 11 0;
#X connect 11 0 7 0;
#X connect 12 0 10 0;
#X connect 14 0 15 0;
#X connect 15 0 7 0;
#X connect 17 0 16 0;
