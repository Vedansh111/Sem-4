#N struct quick-graph float x float y float y0 float y1 float y2 float
y3 float y4 float y5 float y6;
#N struct hotspot float x float y float radius;
#N canvas 203 180 619 390 10;
#X scalar quick-graph 30 105 99 89 83 72 56 63 32 \;;
#X msg 243 97 fill blue \, stroke blue \, stroke-width 2 \, fill-opacity
0.6;
#X obj 24 33 struct quick-graph float x float y float y0 float y1 float
y2 float y3 float y4 float y5 float y6;
#X obj 243 76 loadbang;
#N canvas 448 46 693 600 hotspot 0;
#X obj 131 53 route enter change leave;
#X obj 131 159 loadbang;
#X obj 268 118 loadbang;
#X obj 131 29 struct hotspot float x float y float radius;
#X msg 131 184 fill blue \, stroke blue \, fill-opacity 0.6 \, mousedown
1 \, drag 1;
#X obj 268 158 draw circle 0 0 8;
#X msg 224 74 4 \$1;
#X obj 224 95 set hotspot radius;
#X obj 131 118 set hotspot radius;
#X msg 131 97 8 \$1;
#X obj 131 240 route drag;
#X obj 131 261 t a a;
#X obj 229 286 unpack p;
#X obj 131 427 set hotspot y;
#X obj 131 394 +;
#X msg 131 306 \$3;
#X obj 240 315 get hotspot x y;
#X obj 241 400 - 30;
#X obj 241 421 div 20;
#X obj 241 366 t a b;
#X msg 454 413 traverse pd-quick-graph.pd \, next;
#X obj 454 434 pointer quick-graph;
#X msg 509 457 next;
#X obj 241 443 list append;
#X obj 327 341 - 95;
#X obj 241 541 set;
#X msg 241 482 set quick-graph y\$1 \, \$2;
#X msg 268 139 fill none;
#X obj 131 219 draw circle radius 0 0;
#X connect 0 0 9 0;
#X connect 0 2 6 0;
#X connect 1 0 4 0;
#X connect 2 0 27 0;
#X connect 3 0 0 0;
#X connect 4 0 28 0;
#X connect 6 0 7 0;
#X connect 9 0 8 0;
#X connect 10 0 11 0;
#X connect 11 0 15 0;
#X connect 11 1 12 0;
#X connect 12 0 13 1;
#X connect 12 0 16 0;
#X connect 14 0 13 0;
#X connect 15 0 14 0;
#X connect 16 0 19 0;
#X connect 16 1 14 1;
#X connect 16 1 24 0;
#X connect 17 0 18 0;
#X connect 18 0 23 0;
#X connect 19 0 17 0;
#X connect 19 1 20 0;
#X connect 20 0 21 0;
#X connect 21 0 25 1;
#X connect 21 1 22 0;
#X connect 22 0 21 0;
#X connect 23 0 26 0;
#X connect 24 0 23 1;
#X connect 26 0 25 0;
#X connect 27 0 5 0;
#X connect 28 0 10 0;
#X restore 243 174 pd hotspot;
#X scalar hotspot 30 194 4 \;;
#X scalar hotspot 50 185 4 \;;
#X scalar hotspot 70 178 4 \;;
#X scalar hotspot 90 167 4 \;;
#X scalar hotspot 110 152 4 \;;
#X scalar hotspot 130 159 4 \;;
#X scalar hotspot 150 127 4 \;;
#X text 241 217 Quick graph demo showing some mouseover animation.
;
#X text 241 237 When you mouse over a scalar \, Pd will give you two
new notifications to the struct outlet:;
#X text 241 267 * "enter" when the mouse first enters the bbox of the
scalar;
#X text 241 287 * "leave" when the mouse leaves the bbox of the scalar
;
#X text 241 317 Of course \, this would be more robust if the notifications
only happened with the mouse enters a shape \, rather than the bbox.
;
#X obj 243 120 draw path M 0 y0 C 10 y0 10 y1 20 y1 C 30 y1 30 y2 40
y2 C 50 y2 50 y3 60 y3 C 70 y3 70 y4 80 y4 C 90 y4 90 y5 100 y5 110
y5 110 y6 120 y6 L 120 150 0 150 z;
#X text 402 21 bug: quick-graph fields;
#X text 402 42 aren't saved in the [set] object;
#X connect 1 0 17 0;
#X connect 3 0 1 0;
