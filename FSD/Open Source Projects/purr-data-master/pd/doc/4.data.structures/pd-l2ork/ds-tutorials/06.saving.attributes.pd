#N struct drawtut-attr-saving float x float y;
#N canvas 1 25 638 551 10;
#X text 0 1 New Drawing Commands: attributes (continued);
#X text 0 1 ____________________________________________;
#X text 53 23 Saving attributes is fairly straightforward using message
boxes with commas separating each attribute:;
#X obj 53 94 loadbang;
#X obj 53 57 struct drawtut-attr-saving float x float y;
#X scalar drawtut-attr-saving 53 184 \;;
#X msg 53 117 fill green \, stroke-width 5 \, stroke brown \, stroke-dasharray
2 6;
#X obj 102 279;
#X text 52 354 Scalars can also save data with the patch. For example
\, the ones above remember their x/y location because that data is
saved as the "x" and "y" fields for each scalar. Each scalar has its
own values for "x" and "y"-- that's we can put the two scalars above
at separate locations in the patch.;
#X text 228 280 <- Create another scalar in the empty object box by
typing the struct name "drawtut-attr-saving" into it.;
#X obj 53 153 draw rect 50 50 0 0;
#N canvas 290 275 450 300 META 0;
#X text 16 26 LICENSE SIBSD;
#X text 16 76 AUTHOR Jonathan Wilkes;
#X text 16 96 HELP_PATCH_AUTHORS Jonathan Wilkes;
#X text 16 6 KEYWORDS tutorial data_structure draw gui;
#X text 16 46 DESCRIPTION specifying display attributes with the [draw]
command;
#X restore 573 520 pd META;
#X text 52 434 We can define more data fields than just "x" and "y".
Later we will use new fields to associate a scalar's data with the
svg attributes. That allows us to change the visual appearance of each
scalar.;
#X connect 3 0 6 0;
#X connect 6 0 10 0;
