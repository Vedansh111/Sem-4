#N struct drawtut-line float x float y;
#N canvas 1 25 638 634 10;
#X obj 53 84 loadbang;
#X text 0 1 New Drawing Commands: line;
#X text 0 1 __________________________;
#X text 53 23 We've already seen the "rect" shape. Now let's look at
the other ones:;
#X obj 53 57 struct drawtut-line float x float y;
#X obj 53 203 draw line 0 0 100 100;
#X scalar drawtut-line 85 245 \;;
#X text 198 280 <- a line;
#X text 52 384 Line is pretty straightforward-- it creates a line segment.
Give the [draw] object the argument "line" \, followed by an x/y coordinate
for one end of the segment and another x/y coordinate for the other
end.;
#X text 52 454 Lines are only a single stroke. They don't have any
inner area to fill \, so none of the messages like "fill" or "fill-rule"
have any effect.;
#X msg 75 177 stroke-linecap \$1;
#X text 52 504 Also \, notice the stroke-linecap message above. It
takes a number to set one of the following:;
#X text 52 536 0 - butt \, or flat edge at an end point;
#X text 52 552 1 - rounded;
#X text 52 568 2 - square \, or a flat edge extending half of the stroke-with
past the end point.;
#X msg 76 138 0;
#X msg 144 138 1;
#X msg 228 138 2;
#X text 105 138 butt;
#X text 173 138 rounded;
#X text 258 138 square;
#N canvas 290 275 450 300 META 0;
#X text 16 26 LICENSE SIBSD;
#X text 16 66 AUTHOR Jonathan Wilkes;
#X text 16 86 HELP_PATCH_AUTHORS Jonathan Wilkes;
#X text 16 6 KEYWORDS tutorial data_structure draw gui;
#X text 16 46 DESCRIPTION drawing a line with the [draw] command;
#X restore 567 601 pd META;
#X msg 53 107 stroke blue \, stroke-width 25;
#X connect 0 0 22 0;
#X connect 10 0 5 0;
#X connect 15 0 10 0;
#X connect 16 0 10 0;
#X connect 17 0 10 0;
#X connect 22 0 5 0;
